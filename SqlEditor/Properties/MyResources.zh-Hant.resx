<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="allKeysInThisPageAreInUse" xml:space="preserve">
    <value>本頁所有主鍵均已使用</value>
  </data>
  <data name="databaseErrorMessage" xml:space="preserve">
    <value>資料庫錯誤訊息</value>
  </data>
  <data name="displayKeyValueArrayMustBeUnique" xml:space="preserve">
    <value>顯示鍵值數組必須是唯一的。</value>
  </data>
  <data name="doYouWantToMergeDuplicateKeyRows" xml:space="preserve">
    <value>您想合併重複的顯示關鍵行嗎？</value>
  </data>
  <data name="doYouWantToSeeTheseRows" xml:space="preserve">
    <value>您想查看這些行嗎？</value>
  </data>
  <data name="eachOfDisplayedRowsHasEmptyFK" xml:space="preserve">
    <value>顯示的每一行都有一個空的外鍵。</value>
  </data>
  <data name="EnterConnectionStringDirections" xml:space="preserve">
    <value>輸入連接字串。 括號 {} 中的數字代表上面給出的值。 密碼使用 {3}。</value>
  </data>
  <data name="enterUserNameOrNoUserString2" xml:space="preserve">
    <value>輸入使用者名稱或選擇不含 {2} 的連接字串。</value>
  </data>
  <data name="errorBackingUpDatabase" xml:space="preserve">
    <value>備份資料庫時發生錯誤。</value>
  </data>
  <data name="errorInUpdatingTable0" xml:space="preserve">
    <value>更新表 {0} 時發生錯誤。</value>
  </data>
  <data name="errorOpeningConnection" xml:space="preserve">
    <value>開啟連線時出錯</value>
  </data>
  <data name="EverythingOkNoDuplicates" xml:space="preserve">
    <value>一切還好。 沒有重複！</value>
  </data>
  <data name="firstColumnMustBePrimaryKey" xml:space="preserve">
    <value>第一列必須是主鍵。</value>
  </data>
  <data name="ifNoDisplayedRowsNoEmptyFK" xml:space="preserve">
    <value>如果沒有顯示任何行，則表示沒有未使用的外鍵。</value>
  </data>
  <data name="MainFilterNotSet" xml:space="preserve">
    <value>沒有主要篩選</value>
    <comment>Used in main research drop down</comment>
  </data>
  <data name="MustPassTestBeforeOKButton" xml:space="preserve">
    <value>您必須通過測試才能啟用 "OK "按鈕。</value>
  </data>
  <data name="mustSelectAvalue" xml:space="preserve">
    <value>必須選擇一個值</value>
  </data>
  <data name="narrow" xml:space="preserve">
    <value>窄表列</value>
  </data>
  <data name="NoPreviousConnectionSet" xml:space="preserve">
    <value>沒有連結的紀錄</value>
    <comment>Used in datagridviewForm.cs</comment>
  </data>
  <data name="numberOfRowsModified" xml:space="preserve">
    <value>修改的行數</value>
  </data>
  <data name="pleaseSelectAvalueFor0" xml:space="preserve">
    <value>請為 {0} 選擇一個值</value>
  </data>
  <data name="rowsThatShouldBeMerged0" xml:space="preserve">
    <value>應合併的行：{0}</value>
  </data>
  <data name="selectedRowIsNotValueOfForeignKey" xml:space="preserve">
    <value>所選行不是外鍵的值。</value>
  </data>
  <data name="selectExactlyOneRow" xml:space="preserve">
    <value>請僅選擇表格中的一行</value>
  </data>
  <data name="selectExactlyTwoRows" xml:space="preserve">
    <value>請恰好選擇表格中的兩行</value>
  </data>
  <data name="selectRowToDelete" xml:space="preserve">
    <value>請選擇要刪除的行</value>
  </data>
  <data name="testPassed" xml:space="preserve">
    <value>測試通過了！</value>
  </data>
  <data name="warning" xml:space="preserve">
    <value>警 告</value>
  </data>
  <data name="wide" xml:space="preserve">
    <value>寬表列</value>
  </data>
  <data name="XrowsPageY" xml:space="preserve">
    <value>{0} 列, 第 {1} 頁</value>
    <comment>Used in form caption at the top of the form</comment>
  </data>
  <data name="youAlreadyHaveThisObjectInDatabase" xml:space="preserve">
    <value>您的資料庫中已經有這個物件了！</value>
  </data>
  <data name="youMustEnterServerName" xml:space="preserve">
    <value>您必須輸入伺服器名稱</value>
  </data>
  <data name="youNeedtoMergeRowIn0" xml:space="preserve">
    <value>您需要合併 {0} 中的行。</value>
  </data>
</root>